@model ServerIndexViewModel
@{
    ViewData["Title"] = "Server";
}

<div class="jumbotron text-center">

    <img class="rounded greetings-mob" height="150" width="150" src="/speedrun/img/blocks/computer.png" />
    <h1 class="display-4">Look at that server churning along...</h1>
    <p class="lead">As long as nothing lights up red, I guess it's working.</p>
</div>

<div class="col">
    <div class="card border-secondary">
        <div class="card-header">
            <h2>Server Properties</h2>
        </div>
        <div class="card-body">
            <ul class="list-group">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>World</span>
                    <span class="badge badge-primary">@Model.ServerProperties.LevelName</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>View Distance</span>
                    <span class="badge badge-primary">@Model.ServerProperties.ViewDistance chunks</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>Seed</span>
                    @if (Model.ServerProperties.LevelSeed.HasValue)
                    {
                        <span class="badge badge-danger">@Model.ServerProperties.LevelSeed</span>
                    }
                    else
                    {
                        <span class="badge badge-primary">random</span>
                    }
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>Difficulty</span>
                    @switch (Model.ServerProperties.Difficulty)
                    {
                        case "peaceful":
                            {
                                <span class="badge badge-danger">@Model.ServerProperties.Difficulty</span>
                                break;
                            }
                        case "easy":
                            {
                                <span class="badge badge-success">@Model.ServerProperties.Difficulty</span>
                                break;
                            }
                        case "normal":
                            {
                                <span class="badge badge-primary">@Model.ServerProperties.Difficulty</span>
                                break;
                            }
                        case "hard":
                            {
                                <span class="badge badge-warning">@Model.ServerProperties.Difficulty</span>
                                break;
                            }
                    }
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>Gamemode</span>
                    @if (Model.ServerProperties.GameMode == "survival")
                    {
                        <span class="badge badge-primary">@Model.ServerProperties.GameMode</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">@Model.ServerProperties.GameMode</span>
                    }
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>Spawn Protection</span>
                    @if (Model.ServerProperties.SpawnProtection == 0)
                    {
                        <span class="badge badge-primary">off</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">@Model.ServerProperties.SpawnProtection blocks</span>
                    }
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span>Broadcast Console</span>
                    @if (Model.ServerProperties.IsConsoleBroadcastEnabled)
                    {
                        <span class="badge badge-primary">on</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">off</span>
                    }
                </li>
            </ul>
        </div>
    </div>
</div>
</div>
