@model ImportIndexViewModel
@{
    ViewData["Title"] = "Synchronize";
}

<div class="jumbotron text-center">
    <img class="rounded greetings-mob" height="150" width="150" src="/speedrun/img/blocks/chest.png" />
    <h1 class="display-4">Storage Sync</h1>
    <p class="lead">Lets take a look into the server chest and see what worlds we can discover.</p>
</div>

<div class="row">
    @if (Model.Runs.Count() == 0)
    {
        <div class="col">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Same old</h5>
                    <p class="card-text">Looks like there was nothing new...</p>
                    <a asp-controller="Runs" asp-action="Index" class="btn btn-primary">Look at some runs?</a>
                </div>
            </div>
        </div>
    }

    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Force?</h5>
                <p class="card-text">Do you want me to recheck everything that I can? This probably messes up the run index. Go to <a asp-controller="Admin" asp-action="Index">operations</a> afterwards to fix this.</p>
                <a asp-controller="Import" asp-action="Force" class="btn btn-primary">Sync with Force!</a>
            </div>
        </div>
    </div>
</div>

@if (Model.Runs.Count() != 0)
{
    <div class="row">
        <div class="col">
            <p>Look what I've found... @Model.Runs.Count() new worlds of which @Model.Runs.Count(x => x.Validity.IsValid) are valid... yay.</p>
        </div>
    </div>

    <div class="row">
        <div class="col">
            <table class="table table-hover">
                <tbody>
                    @foreach (var run in Model.Runs.OrderByDescending(x => x.World.CreatedOn))
                    {
                        @await Html.PartialAsync("_LineRun", run);
                    }
                </tbody>
            </table>
        </div>
    </div>
}
