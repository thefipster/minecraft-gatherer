@using TheFipster.Minecraft.Speedrun.Domain
@model IEnumerable<RunInfo>

<div class="card border-secondary">
    <div class="card-header">
        <h2>Latest Runs</h2>
    </div>
    <div class="card-body">
        <ul class="list-group">
            @foreach (var run in Model.OrderByDescending(x => x.World.CreatedOn))
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <span class="w-33">
                        <a asp-controller="Run" asp-action="Index" asp-route-index="@run.Index">
                            @($"#{run.Index}")
                        </a>
                    </span>
                    <span class="w-33 text-center">
                        @foreach (var player in run.Players.OrderBy(x => x.Name))
                        {
                            @await Html.PartialAsync("_PlayerAvatarSmall", player.Id)
                        }
                    </span>
                    <span class="w-33 text-right">
                        @switch (run.Outcome.State)
                        {
                            case TheFipster.Minecraft.Speedrun.Domain.Outcomes.Finished:
                                {
                                    <span class="badge badge-success">@run.Outcome.State</span>
                                    break;
                                }
                            case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetEnd:
                                {
                                    <span class="badge badge-secondary">@run.Outcome.State</span>
                                    break;
                                }
                            case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetStronghold:
                                {
                                    <span class="badge badge-primary">@run.Outcome.State</span>
                                    break;
                                }
                            case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetNether:
                                {
                                    <span class="badge badge-danger">@run.Outcome.State</span>
                                    break;
                                }
                            case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetSpawn:
                                {
                                    <span class="badge badge-light">@run.Outcome.State</span>
                                    break;
                                }
                        }
                    </span>
                </li>
            }
        </ul>
    </div>
</div>