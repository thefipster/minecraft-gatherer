@model RunListViewModel
@{
    ViewData["Title"] = "Runs";
}

<h1>All Runs</h1>

<div class="row">
    <div class="col">
        <div class="btn-group" role="group">
            <a class="btn btn-secondary" asp-controller="Run" asp-action="Index">Finished</a>
            <a class="btn btn-primary">All</a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="list-group">
            @foreach (var run in Model.Runs.OrderByDescending(x => x.World.CreatedOn))
            {
                <a asp-controller="Run" asp-action="Detail" asp-route-worldName="@run.World.Name" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                    @run.World.CreatedOn.ToLocalTime()

                    <span>
                        @foreach (var player in run.Players.OrderBy(x => x.Name))
                        {
                            <img class="avatar-small" src="@($"/speedrun/img/players/{player.Id}.png")" />
                        }
                    </span>

                    @switch (run.Outcome.State)
                    {
                        case TheFipster.Minecraft.Speedrun.Domain.Outcomes.Finished:
                            {
                                <span class="badge badge-success badge-pill">@run.Outcome.State</span>
                                break;
                            }
                        case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetEnd:
                            {
                                <span class="badge badge-dark badge-pill">@run.Outcome.State</span>
                                break;
                            }
                        case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetStronghold:
                            {
                                <span class="badge badge-secondary badge-pill">@run.Outcome.State</span>
                                break;
                            }
                        case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetNether:
                            {
                                <span class="badge badge-danger badge-pill">@run.Outcome.State</span>
                                break;
                            }
                        case TheFipster.Minecraft.Speedrun.Domain.Outcomes.ResetSpawn:
                            {
                                <span class="badge badge-light badge-pill">@run.Outcome.State</span>
                                break;
                            }
                    }
                </a>
            }
        </div>
    </div>
</div>
