@using TheFipster.Minecraft.Core.Domain
@model RunDetailViewModel
@{
    var playerParam = (Player)ViewData["Player"];
    var player = Model.Analytics.Players.First(x => x.Id == playerParam.Id);
}

<div class="card border-secondary">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h2>@player.Name</h2>
        @await Html.PartialAsync("_PlayerAvatarSmall", player.Id)
    </div>
    <div class="card-body">
        @if (Model.PlayerEvents.ContainsKey(player.Id) && Model.PlayerEvents[player.Id].Any())
        {
            <h3>Advancements</h3>
            <ul class="list-group">
                @foreach (var gameEvent in Model.PlayerEvents[player.Id].OrderBy(x => x.Timestamp))
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>
                            @(gameEvent.Timestamp - Model.Analytics.Timings.StartedOn)
                        </span>
                        <span>@gameEvent.Value</span>
                    </li>
                }
            </ul>
        }
        @if (player.Statistics.Killed.Any())
        {
            <h3>Kills</h3>
            <ul class="list-group">
                @foreach (var kill in player.Statistics.Killed.OrderByDescending(x => x.Value))
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@kill.Key</span>
                        <span>@kill.Value</span>
                    </li>
                }
            </ul>
        }

        @if (player.Statistics.KilledBy.Any())
        {
            <h3>Deaths</h3>
            <ul class="list-group">
                @foreach (var kill in player.Statistics.KilledBy.OrderByDescending(x => x.Value))
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <span>@kill.Key</span>
                        <span>@kill.Value</span>
                    </li>
                }
            </ul>
        }
    </div>
</div>